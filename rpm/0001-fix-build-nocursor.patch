diff --git a/src/assistant/assistant/helpviewer.cpp b/src/assistant/assistant/helpviewer.cpp
index 489a83918..4ab526c01 100644
--- a/src/assistant/assistant/helpviewer.cpp
+++ b/src/assistant/assistant/helpviewer.cpp
@@ -117,8 +117,9 @@ HelpViewerPrivate::HistoryItem HelpViewerPrivate::currentHistoryItem() const
 
 void HelpViewerPrivate::setSourceInternal(const QUrl &url, int *vscroll, bool reload)
 {
+#if QT_CONFIG(cursor)
     QGuiApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
-
+#endif
     const bool isHelp = (url.toString() == "help"_L1);
     const QUrl resolvedUrl = (isHelp ? HelpViewerImpl::LocalHelpFile
                                      : HelpEngineWrapper::instance().findFile(url));
@@ -136,7 +137,9 @@ void HelpViewerPrivate::setSourceInternal(const QUrl &url, int *vscroll, bool re
     else
         m_viewer->scrollToAnchor(resolvedUrl.fragment(QUrl::FullyEncoded));
 
+#if QT_CONFIG(cursor)
     QGuiApplication::restoreOverrideCursor();
+#endif
 
     emit q->sourceChanged(q->source());
     emit q->loadFinished();
diff --git a/src/assistant/assistant/mainwindow.cpp b/src/assistant/assistant/mainwindow.cpp
index 727d83404..b3f9c1cae 100644
--- a/src/assistant/assistant/mainwindow.cpp
+++ b/src/assistant/assistant/mainwindow.cpp
@@ -796,13 +796,17 @@ void MainWindow::showPreferences()
 void MainWindow::syncContents()
 {
     TRACE_OBJ
+#if QT_CONFIG(cursor)
     qApp->setOverrideCursor(QCursor(Qt::WaitCursor));
+#endif
     const QUrl url = m_centralWidget->currentSource();
     showContents();
     if (!m_contentWindow->syncToContent(url))
         statusBar()->showMessage(
             tr("Could not find the associated content item."), 3000);
+#if QT_CONFIG(cursor)
     qApp->restoreOverrideCursor();
+#endif
 }
 
 void MainWindow::showAboutDialog()
diff --git a/src/assistant/assistant/searchwidget.cpp b/src/assistant/assistant/searchwidget.cpp
index 01d272116..c176061d1 100644
--- a/src/assistant/assistant/searchwidget.cpp
+++ b/src/assistant/assistant/searchwidget.cpp
@@ -106,14 +106,18 @@ void SearchWidget::search() const
 void SearchWidget::searchingStarted()
 {
     TRACE_OBJ
+#if QT_CONFIG(cursor)
     qApp->setOverrideCursor(QCursor(Qt::WaitCursor));
+#endif
 }
 
 void SearchWidget::searchingFinished(int searchResultCount)
 {
     TRACE_OBJ
     Q_UNUSED(searchResultCount);
+#if QT_CONFIG(cursor)
     qApp->restoreOverrideCursor();
+#endif
 }
 
 bool SearchWidget::eventFilter(QObject* o, QEvent *e)
diff --git a/src/designer/src/lib/shared/previewmanager.cpp b/src/designer/src/lib/shared/previewmanager.cpp
index 96c9287f2..cb788e9d9 100644
--- a/src/designer/src/lib/shared/previewmanager.cpp
+++ b/src/designer/src/lib/shared/previewmanager.cpp
@@ -244,7 +244,9 @@ void PreviewDeviceSkin::slotDirection(QAction *a)
     const Qt::Orientation newOrientation = newDirection == DirectionUp ? Qt::Vertical : Qt::Horizontal;
     const Qt::Orientation oldOrientation = m_direction  == DirectionUp ? Qt::Vertical : Qt::Horizontal;
     m_direction = newDirection;
+#if QT_CONFIG(cursor)
     QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
     if (oldOrientation != newOrientation) {
         QSize size = screenSize();
         if (newOrientation == Qt::Horizontal)
@@ -252,7 +254,9 @@ void PreviewDeviceSkin::slotDirection(QAction *a)
         fitWidget(size);
     }
     setTransform(skinTransform());
+#if QT_CONFIG(cursor)
     QApplication::restoreOverrideCursor();
+#endif
 }
 
 void PreviewDeviceSkin::fitWidget(const QSize &size)
@@ -371,10 +375,14 @@ void ZoomablePreviewDeviceSkin::setZoomPercent(int zp)
     if (m_zoomMenu->zoom() != zp)
         m_zoomMenu->setZoom(zp);
 
+#if QT_CONFIG(cursor)
     QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
     m_zoomWidget->setZoom(zp);
     setTransform(skinTransform());
+#if QT_CONFIG(cursor)
     QApplication::restoreOverrideCursor();
+#endif
 }
 
 void ZoomablePreviewDeviceSkin::populateContextMenu(QMenu *menu)
diff --git a/src/linguist/linguist/main.cpp b/src/linguist/linguist/main.cpp
index 38cb55671..8b145d73f 100644
--- a/src/linguist/linguist/main.cpp
+++ b/src/linguist/linguist/main.cpp
@@ -63,8 +63,9 @@ private:
 int main(int argc, char **argv)
 {
     QApplication app(argc, argv);
+#if QT_CONFIG(cursor)
     QApplication::setOverrideCursor(Qt::WaitCursor);
-
+#endif
 #ifdef Q_OS_MAC
     ApplicationEventFilter eventFilter;
     app.installEventFilter(&eventFilter);
@@ -105,7 +106,9 @@ int main(int argc, char **argv)
     eventFilter.setMainWindow(&mw);
 #endif // Q_OS_MAC
     mw.show();
+#if QT_CONFIG(cursor)
     QApplication::restoreOverrideCursor();
+#endif
 
     mw.openFiles(files, true);
 
diff --git a/src/linguist/linguist/mainwindow.cpp b/src/linguist/linguist/mainwindow.cpp
index be89a43ba..e9fd37319 100644
--- a/src/linguist/linguist/mainwindow.cpp
+++ b/src/linguist/linguist/mainwindow.cpp
@@ -571,7 +571,9 @@ bool MainWindow::openFiles(const QStringList &names, bool globalReadWrite)
     bool closeOld = false;
     for (QString name : names) {
         if (!waitCursor) {
+#if QT_CONFIG(cursor)
             QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
             waitCursor = true;
         }
 
@@ -594,7 +596,9 @@ bool MainWindow::openFiles(const QStringList &names, bool globalReadWrite)
         }
         if (opened.isEmpty()) {
             if (!m_dataModel->isWellMergeable(dm)) {
+#if QT_CONFIG(cursor)
                 QApplication::restoreOverrideCursor();
+#endif
                 waitCursor = false;
                 switch (QMessageBox::information(this, tr("Loading File - Qt Linguist"),
                     tr("The file '%1' does not seem to be related to the currently open file(s) '%2'.\n\n"
@@ -664,8 +668,12 @@ bool MainWindow::openFiles(const QStringList &names, bool globalReadWrite)
         }
     }
 
-    if (!waitCursor)
+    if (!waitCursor) {
+#if QT_CONFIG(cursor)
         QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
+    }
+
     m_contextView->setUpdatesEnabled(false);
     m_messageView->setUpdatesEnabled(false);
     int totalCount = 0;
@@ -681,7 +689,9 @@ bool MainWindow::openFiles(const QStringList &names, bool globalReadWrite)
     m_recentFiles.addFiles(m_dataModel->srcFileNames());
 
     revalidate();
+#if QT_CONFIG(cursor)
     QApplication::restoreOverrideCursor();
+#endif
     return true;
 }
 
@@ -765,12 +775,16 @@ QStringList MainWindow::pickTranslationFiles()
 
 void MainWindow::saveInternal(int model)
 {
+#if QT_CONFIG(cursor)
     QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
     if (m_dataModel->save(model, this)) {
         updateCaption();
         statusBar()->showMessage(tr("File saved."), MessageMS);
     }
+#if QT_CONFIG(cursor)
     QApplication::restoreOverrideCursor();
+#endif
 }
 
 void MainWindow::saveAll()
@@ -862,7 +876,9 @@ void MainWindow::print()
     int pageNum = 0;
     QPrintDialog dlg(printer(), this);
     if (dlg.exec()) {
+#if QT_CONFIG(cursor)
         QApplication::setOverrideCursor(Qt::WaitCursor);
+#endif
         printer()->setDocName(m_dataModel->condensedSrcFileNames(true));
         statusBar()->showMessage(tr("Printing..."));
         PrintOut pout(printer());
@@ -932,7 +948,9 @@ void MainWindow::print()
             }
         }
         pout.flushLine(true);
+#if QT_CONFIG(cursor)
         QApplication::restoreOverrideCursor();
+#endif
         statusBar()->showMessage(tr("Printing completed"), MessageMS);
     } else {
         statusBar()->showMessage(tr("Printing aborted"), MessageMS);
